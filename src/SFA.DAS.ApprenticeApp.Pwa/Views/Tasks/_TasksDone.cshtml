@model SFA.DAS.ApprenticeApp.Pwa.ViewModels.TasksPageModel

@foreach (var task in Model.Tasks.OrderBy(x => x.CompletionDateTime))
{
    <div class="app-card">
    <h2 class="app-card__heading">@task.Title</h2>
    <ul class="app-icon-list app-icon-list--muted">
        <li><span class="app-icon-list__icon"><svg>
                    <use xlink:href="/assets/images/icons.svg#calendar"></use>
                </svg></span><span>Completed @string.Format("{0:d MMMM, h:mm}",
                task.CompletionDateTime)@string.Format("{0:tt}", task.CompletionDateTime).ToLower()</span></li>
        @if (task.TaskReminders.Any())
            {
                <li>
                    <span class="app-icon-list__icon svg-placeholder"></span><span>
                        Reminder set: @task.TaskReminders.Select(r => r.ReminderValue).First()

                        @switch (task.TaskReminders.First().ReminderValue)
                        {
                            case 0:
                                <text>minute</text>
                                break;
                            case 1:
                                <text>hour</text>
                                break;
                            case 2:
                                <text>day</text>
                                break;
                            default:
                                <text></text>
                                break;
                        }

                        @if (task.TaskReminders.First().ReminderValue > 1)
                        {
                            <text>s</text>
                        } before
                    </span>

                </li>
            }
            @if (task.TaskFiles.Any())
            {
                <li><span class="app-icon-list__icon"><svg>
                            <use xlink:href="/assets/images/icons.svg#attachment"></use>
                        </svg></span><span>@task.TaskFiles.Count.ToString() file(s)
                        attached</span></li>
            }
            @if (task.TaskLinkedKsbs.Any())
            {
                <li><span class="app-icon-list__icon"><svg>
                            <use xlink:href="/assets/images/icons.svg#ksbs"></use>
                        </svg></span><span>Linked to
                        @task.TaskLinkedKsbs.Count.ToString() KSBs</span></li>
            }

        </ul>
        <div
            class="app-tag app-tag--category-@task.ApprenticeshipCategory.First().Title.ToLower().Replace(" ","").Replace("-", "")">
            @task.ApprenticeshipCategory.First().Title</div>
        <hr class="app-separator" />
        <div class="app-dropdown" data-module="app-dropdown">
            <a class="app-dropdown__toggle" role="button" aria-expanded="false" onkeypress="myFunction()">
                View actions<span class="govuk-visually-hidden"> for @task.Title</span>
            </a>
            <div class="app-dropdown__menu">
                <ul class="app-dropdown__menu-list">
                    <li>
                        <a href="#" class="app-dropdown__menu-link move-todo">
                            <span class="app-dropdown__menu-icon">
                                <svg>
                                    <use xlink:href="/assets/images/icons.svg#arrowLeft"></use>
                                </svg>
                            </span>
                            <span>Move to To do</span>
                        </a>
                        <input type="hidden" class="taskId" value="@task.TaskId" />
                    </li>

                    <li>
                        <a data-id="@task.TaskId" class="app-dropdown__menu-link edit-btn">
                            <span class="app-dropdown__menu-icon">
                                <svg>
                                    <use xlink:href="/assets/images/icons.svg#edit"></use>
                                </svg>
                            </span>
                            <span>Edit</span>
                        </a>
                    </li>
                    <li class="share-link-container">
                        <a href="#" class="app-dropdown__menu-link share-link">
                            <span class="app-dropdown__menu-icon">
                                <svg>
                                    <use xlink:href="/assets/images/icons.svg#share"></use>
                                </svg>
                            </span>
                            <span>Share</span>
                        </a>
                        <input type="hidden" class="share-title" value="@task.Title" />
                        <input type="hidden" class="share-note" value="@task.Note" />
                    </li>
                    <li>
                        <a class="app-dropdown__menu-link delete-task">
                            <span class="app-dropdown__menu-icon">
                                <svg>
                                    <use xlink:href="/assets/images/icons.svg#trash"></use>
                                </svg>
                            </span>
                            <span>Delete</span>
                        </a>
                        <input type="hidden" class="taskId" value="@task.TaskId" />
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <input class="taskId" type="hidden" value="@task.TaskId" />
}