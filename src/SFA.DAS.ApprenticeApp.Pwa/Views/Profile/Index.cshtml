@model SFA.DAS.ApprenticeApp.Pwa.ViewModels.ProfileViewModel
@{
    ViewData["Title"] = "Profile";
}

<h1 class="govuk-heading-xl">Your profile</h1>
<h2 class="govuk-heading-l">Your details</h2>
<div class="app-pane">
    <dl class="app-content-list">
        <dt class="app-content-list__title">
            Name:
        </dt>
        <dd class="app-content-list__content">@Model?.Apprentice?.FirstName @Model?.Apprentice?.LastName</dd>
        <dt class="app-content-list__title">
            Email address:
        </dt>
        <dd class="app-content-list__content">@Model?.Apprentice?.Email</dd>
        <dt class="app-content-list__title">
            Date of birth:
        </dt>
        <dd class="app-content-list__content">@Model?.Apprentice?.DateOfBirth?.ToString("dd/MM/yyyy")</dd>
    </dl>
</div>
<h2 class="govuk-heading-l">Your apprenticeship</h2>
<div class="app-pane">
    <dl class="app-content-list">
        <dt class="app-content-list__title">
            Current employer:
        </dt>
        <dd class="app-content-list__content">@Model.MyApprenticeship?.EmployerName</dd>
        <dt class="app-content-list__title">
            Training provider:
        </dt>
        <dd class="app-content-list__content">@Model.MyApprenticeship?.TrainingProviderName</dd>
        <dt class="app-content-list__title">
            Apprenticeship:
        </dt>
        <dd class="app-content-list__content">@Model.MyApprenticeship?.Title</dd>
        <dt class="app-content-list__title">
            Level:
        </dt>
        <dd class="app-content-list__content">@Model.MyApprenticeship?.Level</dd>
        <dt class="app-content-list__title">
            Planned training start date:
        </dt>
        <dd class="app-content-list__content">@Model.MyApprenticeship?.StartDate?.ToString("dd/MM/yyyy")</dd>
        <dt class="app-content-list__title">
            Planned training end date:
        </dt>
        <dd class="app-content-list__content">@Model.MyApprenticeship?.EndDate?.ToString("dd/MM/yyyy")</dd>

        <dt class="app-content-list__title">
            Estimated duration:
        </dt>
        <dd class="app-content-list__content">@(Model.MyApprenticeship?.ApprenticeshipLength?.Days) days</dd>
    </dl>
</div>

<!-- HTML for the popup box -->
<div id="popup-box" class="popup">
    <div class="popup-content">
        <h2 class="govuk-heading-m">Do you wish to subscribe to notifications?</h2>
        <div class="govuk-button-group">
            <button type="button" class="govuk-button" onclick="allowNotifications()">Allow</button>
            <button type="button" class="govuk-button govuk-button--secondary" onclick="rejectNotifications()">Do not allow</button>
        </div>
    </div>
</div>

<!-- CSS for styling the popup -->
<style>
    .popup {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0,0,0,0.4);
    }

    .popup-content {
        background-color: #fff;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #000;
        width: 80%;
        max-width: 400px; /* Adjust as needed */
        text-align: center;
    }

    .govuk-button-group {
        margin-top: 20px;
    }

    .govuk-button {
        margin: 0 5px;
    }

    /* Style for green button */
    .govuk-button {
        background-color: #006400;
        border-color: #006400;
        color: #ffffff; /* White text color */
    }

    /* Style for the secondary button */
    .govuk-button--secondary {
        background-color: #006400;
        border-color: #006400;
        color: #ffffff; /* White text color */
    }

</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- JavaScript to control the popup -->
<script>
    // Function to show the popup when the page loads
    window.onload = function () {
        document.getElementById("popup-box").style.display = "block";
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('/service-worker.js')
                .then(function (registration) {
                    console.log('Service Worker registered with scope:', registration.scope);
                }).catch(function (error) {
                    console.log('Service Worker registration failed:', error);
                });
        }
    };

    // Function to allow notifications
    function allowNotifications() {
            $.ajax({
                url: '@Url.Action("AddSubscription", "Profile")',
                type: 'POST',
                success: function (response) {
                    console.log(response);
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                }
            });
        }

    // Function to reject notifications
    function rejectNotifications() {
        // Add your logic for rejecting notifications here
        $.ajax({
            url: '@Url.Action("RemoveSubscription", "Profile")',
            type: 'DELETE',
            success: function (response) {
                console.log(response);
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
            }
        });
    }
</script>
