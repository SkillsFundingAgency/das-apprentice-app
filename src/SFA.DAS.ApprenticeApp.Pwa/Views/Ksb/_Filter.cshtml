@using SFA.DAS.ApprenticeApp.Application

<script src="https://code.jquery.com/jquery-3.7.1.min.js"
    integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>

<a href="#filter" data-module="app-overlay" class="app-icon-action">
    <span class="app-icon-action__icon ksb-filter-view">
        <svg>
            <use xlink:href="/assets/images/icons.svg#filter">
            </use>
        </svg>
    </span>
    <span class="app-icon-action__label ksb-filter-line-header">Filters</span>
</a>

<div class="app-overlay" id="filter">
    <div class="app-overlay-header">
        <div class="app-overlay-header__cancel">
            <a href="#" class="app-overlay-header__link">Cancel</a>
        </div>
        <h2 class="app-overlay-header__heading">
            Ksb filters
        </h2>
        <div class="app-overlay-header__save">
            <a href="#" class="app-overlay-header__link apply">Apply</a>
        </div>
    </div>
    <div class="app-overlay__content">
        <div class="app-form-group">
            <fieldset class="app-fieldset">
                <legend class="app-fieldset__legend app-fieldset__legend--s">Filter by status:</legend>
                <div class="app-checkboxes app-checkboxes--small" data-module="app-checkboxes">

                    <div class="app-checkboxes__item">
                        <input class="app-checkboxes__input" id="not-started" name="filter" type="checkbox"
                            value="not-started">
                        <label class="app-label app-checkboxes__label" for="not-started">
                            <span class="app-tag app-tag--status-notstarted">Not started</span>

                        </label>
                    </div>

                    <div class="app-checkboxes__item">
                        <input class="app-checkboxes__input" id="in-progress" name="filter" type="checkbox"
                            value="in-progress">
                        <label class="app-label app-checkboxes__label" for="in-progress">
                            <span class="app-tag app-tag--status-inprogress">In progress</span>
                        </label>
                    </div>

                    <div class="app-checkboxes__item">
                        <input class="app-checkboxes__input" id="ready-for-review" name="filter" type="checkbox"
                            value="ready-for-review">
                        <label class="app-label app-checkboxes__label" for="ready-for-review">
                            <span class="app-tag app-tag--status-readyforreview">Ready for review</span>
                        </label>
                    </div>

                    <div class="app-checkboxes__item">
                        <input class="app-checkboxes__input" id="done" name="filter" type="checkbox" value="done">
                        <label class="app-label app-checkboxes__label" for="done">
                            <span class="app-tag app-tag--status-done">Done</span>
                        </label>
                    </div>

                </div>
            </fieldset>
        </div>

        <div class="app-form-group govuk-!-margin-top-8">
            <fieldset class="app-fieldset">
                <legend class="app-fieldset__legend app-fieldset__legend--s">Other filter options:</legend>
                <div class="app-checkboxes app-checkboxes--small" data-module="app-checkboxes">

                    <div class="app-checkboxes__item">
                        <input class="app-checkboxes__input" id="linked-to-a-task" name="other-filter" type="checkbox"
                            value="linked-to-a-task">
                        <label class="app-label app-checkboxes__label" for="linked-to-a-task">
                            Linked to a task
                        </label>
                    </div>

                </div>
            </fieldset>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        var cookieFilter = getCookieKsb("@Constants.KsbFiltersCookieName");

        if (cookieFilter != null && cookieFilter != "") {
            var filters = getCookieKsb("@Constants.KsbFiltersCookieName");

            data = filters.split('&');

            for (var k in data) {

                var line = data[k].split('=');

                $("#" + line[1]).prop('checked', true);

                $("#filters-set").append("<div class='app-tag app-tag--filter'><span>" + line[1].replace(/\-/g, " ") + "</span> <a class='app-tag__action app-tag__action--remove remove-filter' data-id='" + line[1] + "'><span class='govuk-visually-hidden'>Remove " + line[1].replace(/\-/g, " ") + " from your filters</span></a> " + "</div>");
            }
        }
        else {
            $("#filters-set").hide();
        }

        $(".remove-filter").click(function (e) {
            var filterNames = $(this).attr('data-id');
            $("#" + filterNames).prop('checked', false);
            applyAndSaveFiltersKsb()
        });

        $(".apply").click(function (e) {
            applyAndSaveFiltersKsb()
        });

    });

    function applyAndSaveFiltersKsb() {
        var ssList = "";

        $('input[type=checkbox]').each(function () {
            ssList += "(" + $(this).val() + "-" + (this.checked ? "checked" : "not checked") + ")";
        });

        setCookieKsb('SFA.ApprenticeApp.KsbFilters', $('input[type=checkbox]').serialize(), { secure: true, 'max-age': 3600 });

        location.reload();
    }

    function getCookieKsb(name) {
        let matchess = document.cookie.match(new RegExp(
            "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
        ));
        return matchess ? decodeURIComponent(matchess[1]) : undefined;
    }


    function setCookieKsb(name, value, attributes = {}) {
        attributes = {
            path: '/',
        };

        if (attributes.expires instanceof Date) {
            attributes.expires = attributes.expires.toUTCString();
        }

        let updatedCookies = encodeURIComponent(name) + "=" + encodeURIComponent(value);

        for (let attributeKeys in attributes) {
            updatedCookies += "; " + attributeKeys;
            let attributeValues = attributes[attributeKeys];
            if (attributeValues !== true) {
                updatedCookies += "=" + attributeValues;
            }
        }

        document.cookie = updatedCookies;
    }

</script>