{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceEnvironmentName": {
            "type": "string"
        },
        "environmentName": {
            "type": "string"
        },
        "serviceName": {
            "type": "string"
        },
        "sharedEnvResourceGroup": {
            "type": "string"
        },
        "configurationStorageConnectionString": {
            "type": "securestring"
        },
        "loggingRedisConnectionString": {
            "type": "securestring"
        },
        "loggingRedisKey": {
            "type": "string"
        },
        "tags": {
            "type": "object"
        },
        "resourceGroupLocation": {
            "type": "string"
        },
        "sharedManagementResourceGroup": {
            "type": "string"
        },
        "sharedKeyVaultName": {
            "type": "string"
        },
        "customHostName": {
            "type": "string"
        },
        "keyVaultCertificateName": {
            "type": "string"
        },
        "keyVaultSubnetResourceIdList": {
            "type": "array"
        },
        "sharedApimName": {
            "type": "string"
        },
        "sharedApimResourceGroup": {
            "type": "string"
        },
        "sharedFrontEndAppServicePlanName": {
            "type": "string"
        },
        "sharedFrontEndSubnetResourceId": {
            "type": "string"
        },
        "logAnalyticsSubscriptionId": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]"
        },
        "logAnalyticsWorkspaceName": {
            "type": "string"
        },
        "frontEndAccessRestrictions": {
            "type": "array"
        },
        "utcValue": {
            "type": "string",
            "defaultValue": "[utcNow()]"
        },
        "applicationInsightsConnectionString": {
            "type": "securestring",
            "metadata": {
                "description": "Shared application insights connection string retrieved from the get-product-app-insights step"
            }
        },
        "applicationInsightsResourceId": {
            "type": "string",
            "metadata": {
                "description": "Shared application insights resource ID retrieved from the get-product-app-insights step"
            }
        },
        "alertActionGroupResourceId": {
            "type": "string",
            "metadata": {
                "description": "Alert group resource ID found in the management resources variable groups"
            }
        },
        "enableFailedRequestAlert": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enables alerting on app insights failed requests"
            }
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
        "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
        "resourceGroupName": "[concat(variables('resourceNamePrefix'), '-rg')]",
        "appServiceName": "[concat(variables('resourceNamePrefix'), '-as')]",
        "keyVaultName": "[concat(variables('resourceNamePrefix'),'-kv')]",
        "configNames": "SFA.DAS.ApprenticeApp.Pwa,SFA.DAS.Apprentice.GovSignIn"
    },
    "resources": [
        {
            "apiVersion": "2021-04-01",
            "name": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/resourceGroups",
            "location": "[parameters('resourceGroupLocation')]",
            "tags": "[parameters('tags')]",
            "properties": {}
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('appServiceName'), '-app-service-certificate-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultCertificateName": {
                        "value": "[parameters('keyVaultCertificateName')]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('sharedKeyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('sharedManagementResourceGroup')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('appServiceName'), '-apim-subscription-', parameters('utcValue'))]",
            "resourceGroup": "[parameters('sharedApimResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'apim/apim-subscription.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apimName": {
                        "value": "[parameters('sharedApimName')]"
                    },
                    "subscriptionName": {
                        "value": "[variables('appServiceName')]"
                    },
                    "subscriptionScope": {
                        "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('sharedApimResourceGroup'), '/providers/Microsoft.ApiManagement/service/', parameters('sharedApimName'), '/products/ApprenticeAppOuterApi')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('appServiceName'), '-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('appServiceName')]"
                    },
                    "appServicePlanName": {
                        "value": "[parameters('sharedFrontEndAppServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[parameters('sharedEnvResourceGroup')]"
                    },
                    "subnetResourceId": {
                        "value": "[parameters('sharedFrontEndSubnetResourceId')]"
                    },
                    "appServiceAppSettings": {
                        "value": {
                            "array": [
                                {
                                    "name": "EnvironmentName",
                                    "value": "[parameters('environmentName')]"
                                },
                                {
                                    "name": "ConfigurationStorageConnectionString",
                                    "value": "[parameters('configurationStorageConnectionString')]"
                                },
                                {
                                    "name": "ConfigNames",
                                    "value": "[variables('configNames')]"
                                },
                                {
                                    "name": "Version",
                                    "value": "1.0"
                                },
                                {
                                    "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                                    "value": "[parameters('applicationInsightsConnectionString')]"
                                },
                                {
                                    "name": "ResourceEnvironmentName",
                                    "value": "[parameters('resourceEnvironmentName')]"
                                },
                                {
                                    "name": "LoggingRedisConnectionString",
                                    "value": "[parameters('loggingRedisConnectionString')]"
                                },
                                {
                                    "name": "LoggingRedisKey",
                                    "value": "[parameters('loggingRedisKey')]"
                                }
                            ]
                        }
                    },
                    "customHostName": {
                        "value": "[parameters('customHostname')]"
                    },
                    "certificateThumbprint": {
                        "value": "[reference(concat(variables('appServiceName'), '-app-service-certificate-', parameters('utcValue'))).outputs.certificateThumbprint.value]"
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('frontEndAccessRestrictions')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('resourceNamePrefix'), '-notification-hub-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'notification-hub.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namespaceLocation": {
                        "value": "[parameters('resourceGroupLocation')]"
                    },
                    "namespaceName": {
                        "value": "[concat(variables('resourceNamePrefix'), '-ns')]"
                    },
                    "notificationHubName": {
                        "value": "[concat(variables('resourceNamePrefix'), '-hub')]"
                    },
                    "sku": {
                        "value": "Free"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('keyVaultName'), '-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'keyvault.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "enabledForTemplateDeployment": {
                        "value": false
                    },
                    "enableFirewall": {
                        "value": true
                    },
                    "enableRbacAuthorization": {
                        "value": true
                    },
                    "subnetResourceIdList": {
                        "value": "[parameters('keyVaultSubnetResourceIdList')]"
                    },
                    "allowTrustedMicrosoftServices": {
                        "value": false
                    },
                    "logAnalyticsWorkspaceName": {
                        "value": "[parameters('logAnalyticsWorkspaceName')]"
                    },
                    "logAnalyticsWorkspaceResourceGroupName": {
                        "value": "[parameters('sharedManagementResourceGroup')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "condition": "[equals(parameters('enableFailedRequestAlert'), true())]",
            "apiVersion": "2021-04-01",
            "name": "[concat('application-insights-', variables('appServiceName'), '-alert-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'application-insights-failed-requests-alert.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "serviceName": {
                        "value": "[variables('appServiceName')]"
                    },
                    "applicationInsightsResourceId": {
                        "value": "[parameters('applicationInsightsResourceId')]"
                    },
                    "alertActionGroupResourceId": {
                        "value": "[parameters('alertActionGroupResourceId')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "ResourceGroupName": {
            "type": "string",
            "value": "[variables('resourceGroupName')]"
        },
        "AppServiceName": {
            "type": "string",
            "value": "[variables('appServiceName')]"
        }
    }
}